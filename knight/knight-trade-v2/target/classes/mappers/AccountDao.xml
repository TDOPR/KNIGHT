<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.defi.mapper.AccountDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.defi.entity.AccountEntity" id="accountMap">
        <result property="id" column="id"/>
        <result property="uid" column="uid"/>
        <result property="coinId" column="coin_id"/>
        <result property="status" column="status"/>
        <result property="balanceAmount" column="balance_amount"/>
        <result property="freezeAmount" column="freeze_amount"/>
        <result property="rechargeAmount" column="recharge_amount"/>
        <result property="withdrawalsAmount" column="withdrawals_amount"/>
        <result property="recAddr" column="rec_addr"/>
        <result property="netValue" column="net_value"/>
        <result property="lockMargin" column="lock_margin"/>
        <result property="floatProfit" column="float_profit"/>
        <result property="totalProfit" column="total_profit"/>
        <result property="version" column="version"/>
        <result property="lastUpdateTime" column="last_update_time"/>
        <result property="created" column="created"/>
    </resultMap>

    <!-- 增加账户资金 -->
    <update id="addAmountByAid">
        UPDATE `account` SET balance_amount = balance_amount + #{amount} WHERE uid = #{accountId}
        <![CDATA[
            AND coin_id = #{coinId};
        ]]>
    </update>

    <update id="addSuperAmountByAid">
        UPDATE `account` SET s_amount = s_amount + #{amount} WHERE uid = #{accountId}
        <![CDATA[
                                                                           AND coin_id = #{coinId};
        ]]>
    </update>

    <!-- 扣减账户资金 -->
    <update id="subtractAmount">
        UPDATE `account` SET balance_amount = balance_amount - #{amount}
        WHERE uid = #{accountId} and coin_id = #{coinId}
        <![CDATA[
          AND balance_amount >= #{amount}
        ]]>
    </update>

    <select id="selectAllAmount" resultType="java.lang.Integer" >
        SELECT
            sum( balance_amount ) AS amount
        FROM
            account
        WHERE
            coin_id = 1;
    </select>

    <select id="selectStaticIncomeUserList" resultType="java.util.Map" >
        SELECT
            uid,
            sum( balance_amount ) AS amount
        FROM
            account
        WHERE
            coin_id IN ( 1, 2 )
        GROUP BY
            uid
    </select>

    <select id="selectSuperUserList" resultType="java.util.Map" >
        SELECT
            b.id,
            a.balance_amount
        FROM
            account a
        LEFT JOIN user_info b
        ON
            a.uid = b.id
        WHERE

            b.level = 5
        <![CDATA[
          AND coin_id = 1
        ]]>

    </select>

<!--    <select id="selectSuperUserList" resultType="java.util.List" >-->
<!--        SELECT-->
<!--            uid-->
<!--        FROM-->
<!--            account-->
<!--        WHERE-->
<!--            coin_id IN ( 1, 2 )-->
<!--        GROUP BY-->
<!--            uid-->
<!--    </select>-->

    <update id="addPendingAmountByAid">
        UPDATE `account` SET pending_amount = pending_amount + #{amount}
        WHERE uid = #{accountId} and coin_id = #{coinId}
    </update>

</mapper>